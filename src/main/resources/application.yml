spring:
  application:
    name: payment-system-kotlin

  r2dbc:
    url: r2dbc:mysql://localhost:3307/test
    username: root
    password: 1234

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
  thymeleaf:
    cache: false

  cloud:
    stream:
      kafka:
        binder:
          brokers: pkc-gq2xn.asia-northeast3.gcp.confluent.cloud:9092
          configuration:
            security:
              protocol: SASL_SSL #클라이언트와 카프라 통신 프로토콜
            sasl:
              jaas:
                config: org.apache.kafka.common.security.plain.PlainLoginModule required username='${KAFKA_API_KEY}' password='${KAFKA_SECRET_KEY}';
              mechanism: PLAIN
            client:
              dns:
                lookup: use_all_dns_ips #주어진 호스트이름에 대해 모든 IP주소를 조회하고 사용

          required-acks: all #모든 레플리카가 성공적으로 복제했다는 확인을 받은 후에만 메시지 전송 - 가장 데이터 손실이 없음 / 전송속도가 느리지만 신뢰성 증가
          auto-create-topics: false #존재하지 않는 토픽에대한 메시지를 받을때 토픽생성하지 않음

        bindings:
          send-out-0:
            producer:
              record-metadata-channel: payment-result

      bindings:
        send-out-0:
          destination: payment
          group: payment-service

logging:
  level:
    org:
      springframework:
        web: DEBUG
        r2dbc: DEBUG
        transaction: DEBUG

PSP:
  toss:
    secretKey: "test_gsk_docs_OaPz8L5KdmQXkzRz3y47BMw6"
    url: "https://api.tosspayments.com"
management:
  endpoints:
    web:
      exposure:
        include: bindings

